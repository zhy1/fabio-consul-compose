version: '2'

services:
  consul_server_1:
    image: "consul:latest"
    container_name: "consul_server_1"
    environment:
      CONSUL_LOCAL_CONFIG: '{"leave_on_terminate": true}'
    networks:
      app_net:
        ipv4_address: 172.29.0.3
    command: "agent -server -bind=172.29.0.3 -client=172.29.0.3 -retry-join=172.29.0.2"
    restart:
      always

  consul_server_2:
    image: "consul:latest"
    container_name: "consul_server_2"
    depends_on:
      - consul_server_1
    ports:
      - "8600:8600"
      - "8500:8500"
    networks:
      app_net:
        ipv4_address: 172.29.0.4
    command: "agent -server -bind=172.29.0.4 -client=172.29.0.4 -retry-join=172.29.0.3 -ui"
    restart:
      always

  consul_server_3:
    image: "consul:latest"
    container_name: "consul_server_3"
    depends_on:
      - consul_server_1
      - consul_server_2
    environment:
      CONSUL_LOCAL_CONFIG: '{"leave_on_terminate": true}'
    networks:
      app_net:
        ipv4_address: 172.29.0.5
    command: "agent -server -bind=172.29.0.5 -client=172.29.0.5 -retry-join=172.29.0.4 -bootstrap-expect=3"
    restart:
      always

  fabio:
    image: "magiconair/fabio"
    depends_on:
      - consul_server_1
      - consul_server_2
      - consul_server_3
    ports:
      - "7007:9997" # tcp
      - "7500:9998" # web
      - "7000:9999" # http
      - "7605:9605" # thrift
      - "7606:9605" # thrift
      #      - "9996:9996"
      #      - "9995:9995"
      #      - "9994:9994"
      #      - "9993:9993"
      #      - "9992:9992"
      #      - "9991:9991"
      #      - "9990:9990"
      #      - "9989:9989"
      #      - "9988:9988"
    networks:
      app_net:
        ipv4_address: 172.29.0.6
    volumes:
      - ./fabio.properties:/etc/fabio/fabio.properties
    restart:
      always

  registrator:
    # this ip must be public ip not vlan ip.
    command: "-ip 172.17.50.225 consul://172.17.50.225:8500"
    depends_on:
      - consul_server_1
      - consul_server_2
      - consul_server_3
      - fabio
    image: "gliderlabs/registrator:latest"
    networks:
      app_net:
        ipv4_address: 172.29.0.7
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    restart:
      always

      #  netdata:
      # image:  netdata/netdata:latest
      # cap_add:
      # - SYS_PTRACE
      # volumes:
      # - /proc:/host/proc:ro
      # - /sys:/host/sys:ro
      # - /etc/localtime:/etc/localtime:ro
      # - netdata/netdata.conf /etc/netdata/netdata.conf
      # ports:
    # - 127.0.0.1:8080:19999
    # restart:
    # always

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: "172.29.0.0/24"